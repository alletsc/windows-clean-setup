#!/bin/bash

set -e

# Checagem b√°sica para n√£o rodar fora do WSL/Ubuntu
if ! grep -qi microsoft /proc/version && [ "$(uname -s)" != "Linux" ]; then
  echo "‚ùå Este script foi feito para Ubuntu/WSL! Abortando."
  exit 1
fi

echo "üîß Atualizando pacotes..."
sudo apt update -y && sudo apt upgrade -y

echo "üì¶ Instalando depend√™ncias essenciais para build de Python..."
sudo apt install -y make build-essential libssl-dev zlib1g-dev \
  libbz2-dev libreadline-dev libsqlite3-dev curl git \
  libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
  libffi-dev liblzma-dev unzip

echo "üìÇ Instalando pyenv (gerenciador de vers√µes do Python)..."
if [ ! -d "$HOME/.pyenv" ]; then
  curl https://pyenv.run | bash
else
  echo "pyenv j√° est√° instalado."
fi

# Configura√ß√£o do pyenv no shell (zsh ou bash)
SHELL_RC="$HOME/.zshrc"
[ -n "$ZSH_VERSION" ] || [ -f "$HOME/.zshrc" ] || SHELL_RC="$HOME/.bashrc"
if ! grep -q 'pyenv config' "$SHELL_RC"; then
  echo -e '\n# pyenv config' >> "$SHELL_RC"
  echo 'export PYENV_ROOT="$HOME/.pyenv"' >> "$SHELL_RC"
  echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> "$SHELL_RC"
  echo 'eval "$(pyenv init --path)"' >> "$SHELL_RC"
  echo 'eval "$(pyenv init -)"' >> "$SHELL_RC"
fi

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# Instala√ß√£o segura do Python 3.12 (se n√£o existir)
if ! pyenv versions | grep -q "3.12.0"; then
  echo "üêç Instalando Python 3.12 via pyenv..."
  pyenv install 3.12.0
fi
pyenv global 3.12.0

# Garante que pip est√° atualizado
python -m pip install --upgrade pip

# Ambiente virtual universal
VENV_PATH="$HOME/dbt-env"
if [ ! -d "$VENV_PATH" ]; then
  echo "üß™ Criando ambiente virtual dbt-env..."
  python -m venv "$VENV_PATH"
fi

echo "‚úÖ Ativando ambiente virtual..."
source "$VENV_PATH/bin/activate"

echo "üì¶ Instalando DBT + adaptador BigQuery..."
pip install --upgrade dbt-core dbt-bigquery

# Estrutura universal de projetos DBT
PROJ_ROOT="$HOME/projects/dbt"
mkdir -p "$PROJ_ROOT"
cd "$PROJ_ROOT"
if [ ! -d "exemplo-projeto" ]; then
  echo "üìÅ Criando estrutura b√°sica de projeto DBT..."
  dbt init exemplo-projeto
else
  echo "Projeto DBT 'exemplo-projeto' j√° existe."
fi

echo
echo "‚úÖ Instala√ß√£o finalizada com sucesso!"
echo "‚ÑπÔ∏è Para ativar o ambiente depois, use:"
echo "    source ~/dbt-env/bin/activate"
echo "üîÅ Para desativar: deactivate"
